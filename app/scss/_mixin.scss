//MIXINS
@mixin font($fname, $fstyle, $fweight, $furl) {
  @font-face {
    font-family: $fname;
    src: url($furl);
    font-style: $fstyle;
    font-weight: $fweight;
    // font-display: swap // Uncomment to initially display system fonts
  }
}

@mixin _transition($element:all, $time:.5s, $timing:ease-in-out, ) {
  transition: $element ease-in-out $time;
  -webkit-transition: $element ease-in-out $time;
  -moz-transition: $element ease-in-out $time;
  -ms-transition: $element ease-in-out $time;
  -o-transition: $element ease-in-out $time;
}

@mixin _borderRadius($borderRadius) {
  border-radius: $borderRadius;
  -webkit-border-radius: $borderRadius;
  -moz-border-radius: $borderRadius;
  -ms-border-radius: $borderRadius;
  -o-border-radius: $borderRadius;
}

@mixin _widthVw($widthVw) {
  max-width: ($widthVw/1920)*100vw;
  width: 100%;
}

@mixin _widthPercent($widthPercent) {
  width: ($widthPercent/1920)*100%;

}

@mixin _position($property, $number_1, $number_2) {
  #{$property}: ($number_1/$number_2)*100%;
}

@mixin adaptive($property, $startSize, $minSize, $type) {
  $addSize: $startSize - $minSize;

  @if $type==1 {
    //только если меньше контейнера
    #{$property}: $startSize + px;

    @media (max-width: #{$maxWidthContainer} + px) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
  }

  @else if $type==2 {
    //только если больше контейнера
    #{$property}: $startSize + px;

    @media (min-width: #{$maxWidthContainer} + px) {
      #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
  }

  @else {
    #{$property}: calc(#{$minSize+px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
  }
}